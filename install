#!/bin/sh

set -e

log() {
    message=$1
    echo ðŸ“Œ "$message"
}

is_file() {
    path="$1"
    [ -f "$path" ]
}

is_dir() {
    path="$1"
    [ -d "$path" ]
}

# zinit
if ! is_dir ~/.zinit; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)"
fi


# checking brew path to see bin file exists or not
if [ ! -f /usr/local/bin/brew ]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

CLONE_PATH=$HOME # <- change it
if [ ! -d "$CLONE_PATH" ]; then
    mkdir -p "$CLONE_PATH"
fi

# check whether dotfiles is already cloned or not
if [ ! -d "$CLONE_PATH"/dotfiles ]; then
    cd "$CLONE_PATH"
    git clone https://github.com/nuovotaka/dotfiles.git # <- change it
fi

brew bundle -v --file "$CLONE_PATH"/dotfiles/Brewfile

if [ ! -d $HOME/.config ]; then
    mkdir $HOME/.config/
fi

stow -v -d "$CLONE_PATH"/dotfiles/packages -t $HOME zsh starship git asdf

if ! is_file ~/.ssh/id_ed25519.pub; then
    log 'Setup gpg signing for git'
    ssh-keygen -t ed25519 -C "tkn.infomail@gmail.com"
    log 'Copy and pates the SSH key below to GitHub and Bitbucket'
    cat ~/.ssh/id_ed25519.pub
fi

# asdf
for plugin in $(awk '{print $1}' ~/.tool-versions); do
    if ! is_dir ~/.asdf/plugins/"$plugin"; then
        asdf plugin add "$plugin"
    fi
done

is_runtime_versions_changed () {
    plugin="$1"
    specified=$(grep "$plugin" ~/.tool-versions | awk '{$1=""; print $0}')
    installed=$(asdf list "$plugin" 2>&1)

    is_changed=
    for version in $specified; do
        match=$(echo "$installed" | grep "$version")
        [ -z "$match" ] && is_changed=1
    done

    [ "$is_changed" ]
}

for plugin in $(asdf plugin list); do
    if is_runtime_versions_changed "$plugin"; then
        if [ "$plugin" = nodejs ]; then log "Import release team keyring for Node.JS"
            bash -c '${ASDF_DATA_DIR:=$HOME/.asdf}/plugins/nodejs/bin/import-release-team-keyring'
        fi

        log "Install runtime: $plugin"
        asdf install "$plugin"
    fi
done
